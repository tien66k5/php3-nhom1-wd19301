<?php

namespace App\Notifications;

use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Notifications\Messages\MailMessage;
use Illuminate\Notifications\Notification;

class CustomResetPassword extends Notification
{
    public $token;
    use Queueable;

    /**
     * Create a new notification instance.
     */
    public function __construct($token)
    {
        $this->token = $token;
    }

    /**
     * Get the notification's delivery channels.
     *
     * @return array<int, string>
     */
    public function via(object $notifiable): array
    {
        return ['mail'];
    }

    /**
     * Get the mail representation of the notification.
     */
    public function toMail($notifiable)
    {
        $resetUrl = url("/reset-password/{$this->token}?email=" . urlencode($notifiable->email));

        return (new MailMessage)
            ->subject('üîê Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u')
            ->greeting('Xin ch√†o ' . ($notifiable->name ?? 'b·∫°n') . '!')
            ->line('Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n.')
            ->action('ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u ngay', $resetUrl)
            ->line('N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒëi·ªÅu n√†y, vui l√≤ng b·ªè qua email n√†y.')
            ->salutation('Tr√¢n tr·ªçng, ƒë·ªôi ng≈© h·ªó tr·ª£!');
    }

    /**
     * Get the array representation of the notification.
     *
     * @return array<string, mixed>
     */
    public function toArray(object $notifiable): array
    {
        return [
            //
        ];
    }
}
